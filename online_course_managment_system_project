-- Users table
CREATE TABLE Users (
    user_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    email VARCHAR2(100) NOT NULL UNIQUE,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    role VARCHAR2(20) NOT NULL CHECK (role IN ('student', 'instructor', 'admin'))
);

-- Students table
CREATE TABLE Students (
    student_id NUMBER PRIMARY KEY,
    date_of_birth DATE NOT NULL,
    address VARCHAR2(255),
    phone_number VARCHAR2(20),
    enrollment_date DATE NOT NULL,
    FOREIGN KEY (student_id) REFERENCES Users(user_id)
);

-- Instructors table
CREATE TABLE Instructors (
    instructor_id NUMBER PRIMARY KEY,
    department VARCHAR2(100) NOT NULL,
    hire_date DATE NOT NULL,
    bio CLOB,
    FOREIGN KEY (instructor_id) REFERENCES Users(user_id)
);

-- Courses table
CREATE TABLE Courses (
    course_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    course_name VARCHAR2(100) NOT NULL,
    course_description CLOB,
    credits NUMBER NOT NULL,
    department VARCHAR2(100) NOT NULL
);

-- Course_Sessions table
CREATE TABLE Course_Sessions (
    session_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    course_id NUMBER NOT NULL,
    instructor_id NUMBER NOT NULL,
    semester VARCHAR2(20) NOT NULL,
    year NUMBER NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    FOREIGN KEY (course_id) REFERENCES Courses(course_id),
    FOREIGN KEY (instructor_id) REFERENCES Instructors(instructor_id)
);

-- Enrollments table
CREATE TABLE Enrollments (
    enrollment_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    student_id NUMBER NOT NULL,
    session_id NUMBER NOT NULL,
    enrollment_date DATE NOT NULL,
    grade VARCHAR2(2),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (session_id) REFERENCES Course_Sessions(session_id)
);

-- Departments table
CREATE TABLE Departments (
    department_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    department_name VARCHAR2(100) NOT NULL,
    department_head NUMBER,
    FOREIGN KEY (department_head) REFERENCES Instructors(instructor_id)
);

-- Assignments table
CREATE TABLE Assignments (
    assignment_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    session_id NUMBER NOT NULL,
    title VARCHAR2(100) NOT NULL,
    description CLOB,
    due_date DATE NOT NULL,
    FOREIGN KEY (session_id) REFERENCES Course_Sessions(session_id)
);

-- Submissions table
CREATE TABLE Submissions (
    submission_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    assignment_id NUMBER NOT NULL,
    student_id NUMBER NOT NULL,
    submission_date DATE NOT NULL,
    grade VARCHAR2(2),
    feedback CLOB,
    FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id),
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);

-- Materials table
CREATE TABLE Materials (
    material_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    course_id NUMBER NOT NULL,
    title VARCHAR2(100) NOT NULL,
    type VARCHAR2(50) NOT NULL,
    url VARCHAR2(255),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- Classes table
CREATE TABLE Classes (
    class_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    session_id NUMBER NOT NULL,
    class_date DATE NOT NULL,
    topic VARCHAR2(100) NOT NULL,
    location VARCHAR2(100),
    FOREIGN KEY (session_id) REFERENCES Course_Sessions(session_id)
);

-- Attendance table
CREATE TABLE Attendance (
    attendance_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    class_id NUMBER NOT NULL,
    student_id NUMBER NOT NULL,
    status VARCHAR2(20) NOT NULL CHECK (status IN ('present', 'absent', 'late')),
    FOREIGN KEY (class_id) REFERENCES Classes(class_id),
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);

-- Exams table
CREATE TABLE Exams (
    exam_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    session_id NUMBER NOT NULL,
    exam_date DATE NOT NULL,
    type VARCHAR2(50) NOT NULL,
    total_marks NUMBER NOT NULL,
    FOREIGN KEY (session_id) REFERENCES Course_Sessions(session_id)
);

-- Exam_Results table
CREATE TABLE Exam_Results (
    result_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    exam_id NUMBER NOT NULL,
    student_id NUMBER NOT NULL,
    marks_obtained NUMBER NOT NULL,
    grade VARCHAR2(2),
    FOREIGN KEY (exam_id) REFERENCES Exams(exam_id),
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);

-- Feedback table
CREATE TABLE Feedback (
    feedback_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    student_id NUMBER NOT NULL,
    course_id NUMBER NOT NULL,
    instructor_id NUMBER NOT NULL,
    feedback_date DATE NOT NULL,
    comments CLOB,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id),
    FOREIGN KEY (instructor_id) REFERENCES Instructors(instructor_id)
);

